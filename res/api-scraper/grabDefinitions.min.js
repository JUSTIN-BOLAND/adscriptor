!function(){let e=[],n={default:{css:"font-weight: inherit; color: inherit;"},bold:{css:"font-weight: bold;"},redBold:{css:"font-weight: bold; color: #f00;"},greenBold:{css:"font-weight: bold; color: #0a0;"}};function t(e,...t){let i="%cAdWords Definition Grabber: %c"+e[0],r=[n.bold.css,n.default.css];for(let[n,o]of Object.entries(t))o.css?(i+="%c",r.push(o.css)):i+=o,i+=e[+n+1];return[i,...r]}const i=[{find:/(:\s*?|->\s*?)(?:\?|\+)?byte\b/gi,replace:"$1number"},{find:/(:\s*?|->\s*?)(?:\?|\+)?int\b/gi,replace:"$1number"},{find:/(:\s*?|->\s*?)(?:\?|\+)?integer\b/gi,replace:"$1number"},{find:/(:\s*?|->\s*?)(?:\?|\+)?long\b/gi,replace:"$1number"},{find:/(:\s*?|->\s*?)(?:\?|\+)?short\b/gi,replace:"$1number"},{find:/(:\s*?|->\s*?)(?:\?|\+)?float\b/gi,replace:"$1number"},{find:/(:\s*?|->\s*?)(?:\?|\+)?double\b/gi,replace:"$1number"},{find:/(:\s*?|->\s*?)(?:\?|\+)?numeric\b/gi,replace:"$1number"},{find:/(:\s*?|->\s*?)(?:\?|\+)?number\b/gi,replace:"$1number"},{find:/(:\s*?|->\s*?)(?:\?|\+)?string\b/gi,replace:"$1string"},{find:/(:\s*?|->\s*?)(?:\?|\+)?char\b/gi,replace:"$1string"},{find:/(:\s*?|->\s*?)(?:\?|\+)?date\b/gi,replace:"$1+Date"},{find:/(:\s*?|->\s*?)(?:\?|\+)?object\b/gi,replace:"$1object"},{find:/(\[\s*?)(?:\?|\+)?byte(\s*?\])/gi,replace:"$1number$2"},{find:/(\[\s*?)(?:\?|\+)?int(\s*?\])/gi,replace:"$1number$2"},{find:/(\[\s*?)(?:\?|\+)?integer(\s*?\])/gi,replace:"$1number$2"},{find:/(\[\s*?)(?:\?|\+)?long(\s*?\])/gi,replace:"$1number$2"},{find:/(\[\s*?)(?:\?|\+)?short(\s*?\])/gi,replace:"$1number$2"},{find:/(\[\s*?)(?:\?|\+)?float(\s*?\])/gi,replace:"$1number$2"},{find:/(\[\s*?)(?:\?|\+)?double(\s*?\])/gi,replace:"$1number$2"},{find:/(\[\s*?)(?:\?|\+)?numeric(\s*?\])/gi,replace:"$1number$2"},{find:/(\[\s*?)(?:\?|\+)?number(\s*?\])/gi,replace:"$1number$2"},{find:/(\[\s*?)(?:\?|\+)?string(\s*?\])/gi,replace:"$1string$2"},{find:/(\[\s*?)(?:\?|\+)?char(\s*?\])/gi,replace:"$1string$2"},{find:/(\[\s*?)(?:\?|\+)?date(\s*?\])/gi,replace:"$1+Date$2"},{find:/(\[\s*?)(?:\?|\+)?object(\s*?\])/gi,replace:"$1object$2"},{find:/^lang\.string$/gi,replace:"string"}];function r(e){if(e&&"object"==typeof e){if(Array.isArray(e))return e.map(r);{let n={};for(let t of Object.keys(e))n[t]=r(e[t]);return n}}for(let{find:n,replace:t}of i)e=e.replace(n,t);return e}if(!tern||!tern.Server)return void console.log(...t`${n.redBold}Error: tern is not defined`);let o=tern.Server.prototype.addDefs;tern.Server.prototype.addDefs=function(i,r){r?e.unshift(i):e.push(i);for(let e of Object.keys(i))"!"!==e[0]&&console.log(...t`Found definition for ${n.greenBold}${e}`);return o.apply(this,arguments)};let s=tern.Server.prototype.reset;tern.Server.prototype.reset=function(){return e.length>0&&(console.log(...t`Sanitizing definitions... this might take a while.`),e=e.map(e=>{let n=r(e);return n["!define"]&&("Array"in n["!define"]&&delete n["!define"].Array,"String"in n["!define"]&&delete n["!define"].String),n}),function(){let n=JSON.stringify({definitions:e},null,2),t=new Blob([n],{type:"application/json"}),i=URL.createObjectURL(t),r=document.createElement("div");Object.assign(r.style,{position:"fixed",top:"0",left:"0",width:"100%",height:"100%",display:"flex",justifyContent:"center",alignItems:"center",backgroundColor:"rgba(0, 0, 0, 0.7)",zIndex:"1000000"});let o=document.createElement("a");Object.assign(o.style,{padding:"24px",backgroundColor:"#4285f4",color:"#fff",textDecoration:"none"}),o.appendChild(document.createTextNode("Download Autocompletion Definitions")),o.setAttribute("download","AdWordsApi.json"),o.setAttribute("href",i),o.onclick=function(){setTimeout(()=>{r.style.display="none"},1e3)},r.appendChild(o),document.body.appendChild(r)}(),console.log(...t`${n.greenBold}Done. Please click the download button to download the definition file.`)),s.apply(this,arguments)},console.log(...t`Ready. ${n.greenBold}Please continue script execution now.`)}();
